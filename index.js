const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');

const client = new Client({
    authStrategy: new LocalAuth({
        dataPath: 'session'
    })
});

// Gerenciamento de estado do usu√°rio
const userStates = new Map();

// Mensagens globais
const mensagens = {
    boasvindas: "üëã Ol√°, como vai? \n\nEu sou GPT390, o *assistente virtual* do SENAI - Cruzeiro. \n",
    
    menu: "*Como posso te ajudar?* üôã‚Äç‚ôÇÔ∏è\n \n*Escolha uma op√ß√£o de 1 a 6* \n-----------------------------------\n1Ô∏è‚É£ - *Informa√ß√µes Gerais* \n2Ô∏è‚É£ - *Localiza√ß√£o* \n3Ô∏è‚É£ - *Cursos Oferecidos*  \n4Ô∏è‚É£ - *Documentos de Matr√≠cula* \n5Ô∏è‚É£ - *Atendimento humanizado* \n6Ô∏è‚É£ - *Certificados* \n",
    
    cursos: "üì¢ *Cursos com Matr√≠culas Abertas!* üì¢ \nConfira as √°reas dispon√≠veis e escolha a que mais combina com voc√™: \n \n0Ô∏è‚É£ **Voltar ao Menu Principal** üîô\n1Ô∏è‚É£ *Comandos El√©tricos* ‚ö°\n2Ô∏è‚É£ *Ajustador Mec√¢nico* üîß\n3Ô∏è‚É£ *CLP - Controladores L√≥gicos Program√°veis* üñ•Ô∏è\n4Ô∏è‚É£ *Eletricista Instalador* üí°\n5Ô∏è‚É£ *Ferramenteiraria* üî©\n6Ô∏è‚É£ *Inform√°tica B√°sica* üñ•Ô∏è\n7Ô∏è‚É£ *Inspetor de Qualidade*  üìä\n8Ô∏è‚É£ *NR11 - Operador de Ponte Rolante* üèóÔ∏è\n9Ô∏è‚É£ *NR11 - Operador de Empilhadeira* üöú\nüîü *Operador de Centro de Usinagem CNC* ‚öôÔ∏è\n1Ô∏è‚É£1Ô∏è‚É£ *Operador de Torno CNC* üîÑ\n1Ô∏è‚É£2Ô∏è‚É£ *M√°quinas de Usinagem Convencional* üè≠\n1Ô∏è‚É£3Ô∏è‚É£ *Prensa Industrial* üèóÔ∏è\n1Ô∏è‚É£4Ô∏è‚É£ *Soldador ao Arco El√©trico e Oxig√°s* üî• \n\n ‚úÖ *Vagas limitadas!*  \n üìÖ *Matr√≠culas abertas por tempo limitado!*",
    
    informacoesGerais: "üåü *Informa√ß√µes Gerais da Escola* üåü \n\n üìÖ *Hor√°rio de Funcionamento:* \n Segunda a Sexta: 08h00 √†s 20h00 \n S√°bados: 08h00 √†s 12h00 \n\n üìç *Endere√ßo:* \n Rua S√£o Tom√°s, 01 - Jardim S√£o Jos√© - Cruzeiro/SP \n\n üìû *Telefone:* \n (12) 3141-1400 \n\n üü¢ *WhatsApp (atendimento humano, pode demorar um pouco mais):* \n (12) 99653-2560 \n\n üåê *Redes Sociais e Site:* \n üîó Instagram: @senaicruzeiro \n üîó Facebook: fb.com/escolasenaicruzeiro \n üîó Site Oficial: https://sp.senai.br/unidade/cruzeiro/ \n\n Estamos √† disposi√ß√£o para mais informa√ß√µes! üòä",
    
    localizacao: "üìç *SENAI - Cruzeiro*\n\nüó∫Ô∏è *Endere√ßo:*\nAv. Major Novaes, 1000 - Centro\nCruzeiro - SP, 12700-000\n\nüìû *Telefone:* (12) 99653-2560",
    
    documentos: "üìã *Documentos Necess√°rios para Matr√≠cula*\n\n‚úÖ *Documentos pessoais:*\n‚Ä¢ RG e CPF (c√≥pias)\n‚Ä¢ Comprovante de resid√™ncia\n‚Ä¢ 2 fotos 3x4\n\n‚úÖ *Documentos escolares:*\n‚Ä¢ Hist√≥rico escolar\n‚Ä¢ Certificado de conclus√£o\n\n‚úÖ *Documentos adicionais:*\n‚Ä¢ Comprovante de renda familiar\n‚Ä¢ Termo de responsabilidade (menores de idade)\n\nüìû *Para mais informa√ß√µes, entre em contato conosco!*",
    
    atendimentoHumanizado: "üë• *Atendimento Humanizado*\n\nNossa equipe est√° pronta para te ajudar com todas as suas d√∫vidas sobre matr√≠culas, cursos e informa√ß√µes gerais.\n\nüìû *Entre em contato:*\n+55 12 99653-2560\n\n‚è∞ *Hor√°rio de atendimento:*\nSegunda a Sexta: 8h √†s 17h\nS√°bado: 8h √†s 12h",
    
    certificados: "üéì *Certificados*\n\nAp√≥s a conclus√£o do curso com aproveitamento m√≠nimo de 70% e presen√ßa m√≠nima de 75%, voc√™ receber√° um certificado reconhecido pelo SENAI e v√°lido em todo o territ√≥rio nacional.\n\nüìã *Para solicitar segunda via:*\n*Compare√ßa √† nossa escola!* \n\n‚è∞ *Hor√°rio de atendimento:*\nSegunda a Sexta: 8h √†s 17h\nS√°bado: 8h √†s 12h"
};

// URLs dos cursos
const urlsCursos = {
    '1': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=Comandos&pag=1',
    '2': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=Ajustador%20&pag=1',
    '3': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=Controladores&pag=1',
    '4': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=Eletricista&pag=1',
    '5': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=Ferramenteiro%20de%20corte&pag=1',
    '6': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=INFORM%C3%81TICA&pag=1',
    '7': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=iNSPETOR%20DE%20QUALIDADE&pag=1',
    '8': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=PONTE&pag=1',
    '9': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=EMPILHADEIRA&pag=1',
    '10': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=CENTRO%20DE%20USINAGEM&pag=1',
    '11': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=TORNO%20CNC&pag=1',
    '12': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=OPERADOR%20DE%20M%C3%81QUINAS%20DE%20USINAGEM%20CONVENCIONAIS&pag=1',
    '13': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=PRENSA&pag=1',
    '14': 'https://sp.senai.br/cursos/0/0?unidade=390&pesquisa=SOLDADOR&pag=1'
};

// Nomes dos cursos
const nomesCursos = {
    '1': 'Comandos El√©tricos',
    '2': 'Ajustador Mec√¢nico',
    '3': 'CLP - Controladores L√≥gicos Program√°veis',
    '4': 'Eletricista Instalador',
    '5': 'Ferramenteiraria',
    '6': 'Inform√°tica B√°sica',
    '7': 'Inspetor de Qualidade',
    '8': 'NR11 - Operador de Ponte Rolante',
    '9': 'NR11 - Operador de Empilhadeira',
    '10': 'Operador de Centro de Usinagem CNC',
    '11': 'Operador de Torno CNC',
    '12': 'M√°quinas de Usinagem Convencional',
    '13': 'Prensa Industrial',
    '14': 'Soldador ao Arco El√©trico e Oxig√°s'
};

// Fun√ß√£o para obter ou criar estado do usu√°rio
function getUserState(userId) {
    if (!userStates.has(userId)) {
        userStates.set(userId, {
            submenu: undefined
        });
    }
    return userStates.get(userId);
}

// Fun√ß√£o para lidar com o menu principal
async function handleMainMenu(message, userState) {
    const option = message.body.trim();
    
    switch (option) {
        case '1': // Informa√ß√µes Gerais
            await message.reply(mensagens.informacoesGerais);
            await new Promise(resolve => setTimeout(resolve, 5000));
            await message.reply(mensagens.menu);
            break;
            
        case '2': // Localiza√ß√£o
            await message.reply(mensagens.localizacao);
            await new Promise(resolve => setTimeout(resolve, 5000));
            await message.reply(mensagens.menu);
            break;
            
        case '3': // Cursos Oferecidos
            userState.submenu = 'courses';
            await message.reply(mensagens.cursos);
            break;
            
        case '4': // Documentos
            await message.reply(mensagens.documentos);
            await new Promise(resolve => setTimeout(resolve, 5000));
            await message.reply(mensagens.menu);
            break;
            
        case '5': // Atendimento Humanizado
            // Enviar VCard
            const vcard = `BEGIN:VCARD
VERSION:3.0
FN:SENAI Cruzeiro - Atendimento Humanizado
TEL:+551231411405
END:VCARD`;
            await message.reply(vcard);
            await new Promise(resolve => setTimeout(resolve, 5000));
            await message.reply(mensagens.menu);
            break;
            
        case '6': // Certificados
            await message.reply(mensagens.certificados);
            await new Promise(resolve => setTimeout(resolve, 5000));
            await message.reply(mensagens.menu);
            break;
            
        default: // Qualquer outra mensagem
            await message.reply(mensagens.boasvindas + mensagens.menu);
            break;
    }
}

// Fun√ß√£o para lidar com o submenu de cursos
async function handleSubmenuCourses(message, userState) {
    const option = message.body.trim();
    
    if (option === '0') { // Voltar ao menu principal
        userState.submenu = undefined;
        await message.reply(mensagens.menu);
        return;
    }
    
    // Verificar se √© uma op√ß√£o v√°lida de curso (1-14)
    if (urlsCursos[option]) {
        const nomeCurso = nomesCursos[option];
        const urlCurso = urlsCursos[option];
        
        // Enviar LinkPreview
        await message.reply(`üîó *${nomeCurso}*\n\nVeja todas as informa√ß√µes sobre o curso atrav√©s desse link:\n${urlCurso}`);
        
        // Reenviar menu de cursos
        await new Promise(resolve => setTimeout(resolve, 5000));
        await message.reply(mensagens.cursos);
    } else {
        // Op√ß√£o inv√°lida - limpar estado e voltar ao menu principal
        userState.submenu = undefined;
        await message.reply("‚ùå Op√ß√£o inv√°lida. Retornando ao menu principal.");
        await new Promise(resolve => setTimeout(resolve, 5000));
        await message.reply(mensagens.menu);
    }
}

// Fun√ß√£o principal para processar mensagens
async function processMessage(message) {
    try {
        const userId = message.from;
        const userState = getUserState(userId);
        
        // Verificar se o usu√°rio est√° em um submenu
        if (userState.submenu === 'courses') {
            await handleSubmenuCourses(message, userState);
        } else {
            await handleMainMenu(message, userState);
        }
        
    } catch (error) {
        console.error('Erro ao processar mensagem:', error);
        await message.reply("‚ùå Ocorreu um erro ao processar sua mensagem. Tente novamente.");
    }
}

client.on('ready', () => {
    console.log('GPT390 est√° online e pronto para ajudar! üöÄ');
});

client.on('qr', qr => {
    qrcode.generate(qr, {small: true});
});

client.on('message', async message => {
    // Ignorar mensagens do pr√≥prio bot
    if (message.fromMe) return;
    
    // Processar mensagem
    await processMessage(message);
});

client.initialize();